version: '3.8'
services:
    
    db:
        container_name: pg_container_askmeanythang
        image: postgres
        restart: always
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
        ports:
            - "54320:5432"
        volumes:
            - $HOME/Documents/SaaS/soa/docker-volume
            - pg_data:/var/lib/postgresql/data/
            - ./soa/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
        healthcheck:
            test: ["CMD", "curl", "-fk", "https://localhost:54320"]
            interval: 300s
            timeout: 400s
            retries: 10
    
    dal:
        container_name: data_access_layer
        build: ./soa/data-access-layer
        volumes:
            - .:/usr/app/
            - /usr/app/node_modules
        network_mode: "host"
        depends_on: 
            - "db"
        command: ["./wait-for-it.sh", "localhost:54320", "--", "node", "index.js"]

    service_bus:
        container_name: service_bus
        build: ./soa/service-bus
        volumes:
            - .:/usr/app/
            - /usr/app/node_modules
        network_mode: "host"
        depends_on: 
            - "dal"
        command: ["./wait-for-it.sh", "localhost:3001", "--", "node", "index.js"]

    authenticator:
        container_name: authenticator
        build: ./soa/services/authenticator
        volumes:
            - .:/usr/app/
            - /usr/app/node_modules
        network_mode: "host"
        depends_on: 
            - "service_bus"
        command: ["./wait-for-it.sh", "localhost:4000", "--", "node", "index.js"]


    question_management:
        container_name: question_management
        build: ./soa/services/question-management
        volumes:
            - .:/usr/app/
            - /usr/app/node_modules
        network_mode: "host"
        restart: on-failure
        depends_on: 
            - "service_bus"
        command: ["./wait-for-it.sh", "localhost:4000", "--", "node", "index.js"]

    analytics:
        container_name: analytics
        build: ./soa/services/analytics
        volumes:
            - .:/usr/app/
            - /usr/app/node_modules
        network_mode: "host"
        restart: on-failure
        depends_on: 
            - "service_bus"
        command: ["./wait-for-it.sh", "localhost:4000", "--", "node", "index.js"]
    
    frontend:
        container_name: frontend
        build: ./soa/front-end
        volumes:
            - .:/usr/app
            - /usr/app/node_modules
        network_mode: "host"
        stdin_open: true
        command: npm start
        restart: on-failure
        depends_on: 
            - "dal"

    mvc:
        container_name: mvc_askmeanything
        build: ./mvc
        volumes:
            - .:/usr/app/
            - /usr/app/node_modules
        network_mode: "host"
        depends_on: 
            - "db"
        command: ["./wait-for-it.sh", "localhost:54320", "--", "yarn", "start"]
volumes:
  pg_data:
